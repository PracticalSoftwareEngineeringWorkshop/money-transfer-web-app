{"version":3,"sources":["utils/Constants.js","components/CreateAccount/CreateAccount.js","components/ListAccounts/ListAccounts.js","utils/helper.js","components/ShowAccount/ShowAccount.js","components/Header/Header.js","components/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["API_BASE_URL","process","useStyles","makeStyles","grid","flex","padding","CreateAccount","history","classes","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","phoneNumber","setPhoneNumber","pin","setPin","submitForm","setSubmitForm","handleSubmit","useEffect","axios","post","then","response","data","console","log","alert","message","catch","error","push","onSubmit","Grid","container","spacing","className","item","xs","sm","md","lg","TextField","type","placeholder","name","variant","value","onChange","e","target","required","autoFocus","Button","color","onClick","ListAccounts","useAxios","loading","refetch","CircularProgress","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","row","scope","to","id","dateOfBirth","pinLength","repeat","toString","length","balance","displayType","thousandSeparator","prefix","Checkbox","disabled","checked","isVerified","ShowAccount","accountId","useParams","theme","root","flexGrow","menuButton","marginRight","title","Header","useHistory","AppBar","position","Toolbar","IconButton","edge","Typography","Link","href","display","flexDirection","minHeight","main","marginTop","marginBottom","footer","backgroundColor","palette","grey","Copyright","Date","getFullYear","Footer","CssBaseline","Container","maxWidth","App","exact","path","render","props","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06bc59da.chunk.js","sourcesContent":["export const API_BASE_URL = process.env.REACT_APP_MONEY_TRANSFER_API_BASE_URL\nexport const ENVIRONMENT = process.env.NODE_ENV\n","import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Grid } from '@material-ui/core';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../../utils/Constants';\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n    grid: {\n        flex: 1,\n        padding: 20\n    }\n})\n\nconst CreateAccount = ({ history }) => {\n\n    const classes = useStyles();\n\n    const [firstName, setFirstName] = useState(\"\")\n    const [lastName, setLastName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\n    const [pin, setPin] = useState(\"\")\n\n    const [submitForm, setSubmitForm] = useState(false);\n\n    function handleSubmit() {\n        setSubmitForm(true);\n    }\n\n    useEffect(() => {\n        if (submitForm === true) {\n            axios\n                .post(`${API_BASE_URL}/account/create`,\n                    {\n                        'firstName': firstName,\n                        'lastName': lastName,\n                        'email': email,\n                        'phoneNumber': phoneNumber,\n                        'pin': pin\n                    })\n                .then((response) => {\n                    const { data } = response\n                    console.log(data);\n                    alert(data.message);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    alert(error.error);\n                })\n            history.push('/')\n        }\n    }, [email, firstName, lastName, phoneNumber, pin, submitForm, history])\n\n    // https://material-ui.com/components/grid/#grid\n    return (\n        <form onSubmit={handleSubmit}>\n\n            <Grid container spacing={3} className={classes.grid}>\n                <Grid item xs={12} sm={4} md={3} lg={2}>\n                    <TextField\n                        type=\"text\"\n                        placeholder=\"First Name\"\n                        name=\"firstName\"\n                        variant=\"outlined\"\n                        value={firstName}\n                        onChange={(e) => setFirstName(e.target.value)}\n                        required\n                        autoFocus\n                    />\n                </Grid>\n                <Grid item xs={12} sm={4} md={3} lg={2}>\n                    <TextField\n                        type=\"text\"\n                        placeholder=\"Last Name\"\n                        name=\"lastName\"\n                        variant=\"outlined\"\n                        value={lastName}\n                        onChange={(e) => setLastName(e.target.value)}\n                        required\n                    />\n                </Grid>\n                <Grid item xs={12} sm={4} md={3} lg={2}>\n                    <TextField\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        name=\"email\"\n                        variant=\"outlined\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        required\n                    /></Grid>\n                <Grid item xs={12} sm={4} md={3} lg={2}>\n                    <TextField\n                        type=\"tel\"\n                        placeholder=\"Phone Number\"\n                        name=\"phoneNumber\"\n                        variant=\"outlined\"\n                        value={phoneNumber}\n                        onChange={(e) => setPhoneNumber(e.target.value)}\n                        required\n                    /></Grid>\n                <Grid item xs={12} sm={4} md={3} lg={2}>\n                    <TextField\n                        type=\"password\"\n                        placeholder=\"Pin\"\n                        name=\"pin\"\n                        variant=\"outlined\"\n                        value={pin}\n                        onChange={(e) => setPin(e.target.value)}\n                        required\n                    /></Grid>\n                <Grid item xs={12} sm={4} md={3} lg={2}>\n                    <Button type=\"button\" color=\"primary\" onClick={(e) => handleSubmit()} variant=\"contained\">\n                        Create Account\n                </Button>\n                </Grid>\n\n            </Grid>\n        </form>\n\n    );\n}\n\nexport default CreateAccount;","import React from 'react';\nimport useAxios from 'axios-hooks';\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    CircularProgress,\n    Checkbox\n} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport CurrencyFormat from 'react-currency-format';\nimport { API_BASE_URL } from '../../utils/Constants';\nimport {Link} from \"react-router-dom\";\nimport {convertPinToStars} from \"../../utils/helper\";\n\nconst ListAccounts = () => {\n\n    const [{ data, loading, error }, refetch] = useAxios(`${API_BASE_URL}/account/list`);\n\n    if (loading) return <p><CircularProgress /></p>\n\n    if (error) return <p>Error!</p>\n\n    return (\n        <div>\n            <button onClick={refetch}>Refetch</button>\n\n            <TableContainer component={Paper}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>ID</TableCell>\n                            <TableCell>First Name</TableCell>\n                            <TableCell>Last Name</TableCell>\n                            <TableCell>Email</TableCell>\n                            <TableCell>Phone Number</TableCell>\n                            <TableCell>Date of Birth</TableCell>\n                            <TableCell>PIN</TableCell>\n                            <TableCell>Balance</TableCell>\n                            <TableCell>Is Verified?</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {data.map((row) => {\n                            return (\n                                <TableRow key={row.id}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        <Link to={`/show/${row.id}`}>{row.id}</Link>\n                                    </TableCell>\n                                    <TableCell>{row.firstName}</TableCell>\n                                    <TableCell>{row.lastName}</TableCell>\n                                    <TableCell>{row.email}</TableCell>\n                                    <TableCell>{row.phoneNumber}</TableCell>\n                                    <TableCell>{row.dateOfBirth}</TableCell>\n                                    <TableCell>{convertPinToStars(row.pin)}</TableCell>\n                                    <TableCell><CurrencyFormat value={row.balance} displayType={'text'} thousandSeparator={true} prefix={'ETB '} /></TableCell>\n                                    <TableCell>\n                                        <Checkbox disabled checked={row.isVerified} />\n                                    </TableCell>\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    );\n}\n\nexport default ListAccounts;\n","export const convertPinToStars = (pinLength) => {\n    return \"*\".repeat(pinLength.toString().length);\n}\n","import React from 'react';\nimport useAxios from 'axios-hooks';\nimport { useParams } from \"react-router-dom\";\nimport CurrencyFormat from 'react-currency-format';\nimport { Grid } from '@material-ui/core';\nimport { API_BASE_URL } from '../../utils/Constants';\n\nconst ShowAccount = () => {\n\n    const { accountId } = useParams();\n\n    const [{ data, loading, error }] = useAxios(`${API_BASE_URL}/account/${accountId}`);\n\n    if (loading) return <p>Loading ...</p>\n\n    if (error) return <p>Error!</p>\n\n    return (\n        <Grid container spacing={3} key={data.id}>\n            <Grid item xs={12}>ID: {data.id}</Grid>\n            <Grid item xs={12}>First Name: {data.firstName}</Grid>\n            <Grid item xs={12}>Last Name: {data.lastName}</Grid>\n            <Grid item xs={12}>Email: {data.email}</Grid>\n            <Grid item xs={12}>Phone Number: {data.phoneNumber}</Grid>\n            <Grid item xs={12}>PIN: {data.pin}</Grid>\n            <Grid item xs={12}>Balance: <CurrencyFormat value={data.balance} displayType={'text'} thousandSeparator={true} prefix={'ETB '} /></Grid>\n            <Grid item xs={12}>Is Verified?: {data.isVerified.toString()}</Grid>\n        </Grid>\n    );\n}\n\nexport default ShowAccount;","import React from 'react';\nimport { AppBar, Toolbar, IconButton, Typography, Button, Link } from '@material-ui/core';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nconst Header = () => {\n\n    const classes = useStyles();\n    let history = useHistory();\n\n    // <> </> is a React Fragment\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <IconButton edge=\"start\" color=\"inherit\" className={classes.menuButton} aria-label=\"menu\">\n                    <MonetizationOnIcon />\n                </IconButton>\n                <Typography variant=\"h6\" className={classes.title}>\n                    <Link href=\"/\" color=\"inherit\">\n                        Money Transfer App\n                    </Link>\n                </Typography>\n                <Button color=\"inherit\" onClick={() => history.push('/create')}>Create Account</Button>\n                {/*<Button color=\"inherit\" onClick={() => history.push('/show/1')}>Show Account</Button>*/}\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\n// Copied from https://github.com/mui-org/material-ui/tree/master/docs/src/pages/getting-started/templates/sticky-footer\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n    },\n    main: {\n        marginTop: theme.spacing(8),\n        marginBottom: theme.spacing(2),\n    },\n    footer: {\n        padding: theme.spacing(3, 2),\n        marginTop: 'auto',\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\n    },\n}));\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://money-transfer-webapp-biniam.herokuapp.com\">\n                Money Transfer App\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst Footer = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <footer className={classes.footer}>\n                <Container maxWidth=\"sm\">\n                    <Typography variant=\"body1\">We hope you enjoy using our app.</Typography>\n                    <Copyright />\n                </Container>\n            </footer>\n        </div>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport {CreateAccount, ListAccounts, ShowAccount, Header, Footer} from './components';\n\nconst App = () => {\n    // <> </> is a React Fragment\n    return (\n        <>\n            <Header/>\n            <Switch>\n                <Route\n                    exact\n                    path='/'\n                    render={(props) => <ListAccounts {...props} />}/>\n\n                <Route\n                    exact\n                    path='/create'\n                    render={(props) => <CreateAccount {...props} />}/>\n\n                <Route\n                    exact\n                    path='/show/:accountId'\n                    render={(props) => <ShowAccount {...props} />}/>\n            </Switch>\n            <Footer />\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}